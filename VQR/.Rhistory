source(paste0(getwd(),"/VQR/VQR.R"))
setwd("~/Projects/VQR/R")
source(paste0(getwd(),"/VQR/VQR.R"))
source(paste0(getwd(),"/VQR.R"))
install.packages("gurobi")
install.packages(gurobi, repos=NULL)
install.packages('gurobi', repos=NULL)
install.packages('C:\gurobi912\win64\R\gurobi', repos=NULL)
install.packages('C:/gurobi912/win64/R/gurobi', repos=NULL)
install.packages('C:/gurobi912/win64/R/gurobi')
install.packages('C:/gurobi912/win64/R')
install.packages('C:/gurobi912/win64/R', repos=NULL)
install.packages('C:/gurobi912/win64/R/gurobi_9.1-2.zip', repos=NULL)
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("Engel1D")
inputs<- load_VQRData("Engel1D")
source(paste0(getwd(),"/VQR/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
source(paste0(getwd(),"/VQR/VQR.R"))
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
inputs<- load_VQRData("GDPDebtDeficit")
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
inputs<- load_VQRData("GDPDebtDeficit")
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
inputs<- load_VQRData("GDPDebtDeficit")
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
inputs<- load_VQRData("GDPDebtDeficit")
X<-inputs$X;Y<-inputs$Y;n<-inputs$n;d<-inputs$d;r<-inputs$r
X
Y
Xstep<- 0.1
nu<-matrix(1/n,n,1)
T	<- seq(0,1,by=step)
lT	<- length(T)
if (d!=2){stop("Dimension d not supported")}
UEtAlprov		<- prepareU2D(T)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
xeval			<- matrix(c(1,2.33),1,2)
PlotFixedx2D(xeval,betaEtAl$beta1,betaEtAl$beta2,lT)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
source("~/Projects/VQR/R/test_GDPDebtDeficit.R")
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
xeval			<- matrix(c(1,2.33),1,2)
lT	<- length(T)
if (d!=2){stop("Dimension d not supported")}
UEtAlprov		<- prepareU2D(T)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
X<-inputs$X;Y<-inputs$Y;n<-inputs$n;d<-inputs$d;r<-inputs$r
Xstep<- 0.1
nu<-matrix(1/n,n,1)
T	<- seq(0,1,by=step)
lT	<- length(T)
if (d!=2){stop("Dimension d not supported")}
UEtAlprov		<- prepareU2D(T)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
ComputeBetaEtAl2D<-function(b_prov,T,U_prov,pi_prov,step){
m_prov  <- dim(b_prov)[1]
r		<- dim(b_prov)[2]
n		<- dim(pi_prov)[2]
nonzind	<- which((U_prov[,1] != 0) & (U_prov[,2] != 0))
U 		<- cbind(U_prov[nonzind,1],U_prov[nonzind,2])
m		<- dim(U)[1]
mu		<- matrix(1/m,m,1)
beta1		<- matrix(0,m,r)
beta2		<- matrix(0,m,r)
print("C")
for (k in 1:r) { theGrad <- grad2D(b_prov[,k],T,U_prov,step); print("CC");beta1[,1] <- theGrad$D1bk[nonzind,1]; print("CCC"); beta2[,k]	<- theGrad$D2bk[nonzind,1]}
pi		<- matrix(0,m,n)
for (i in 1:n) {pi[,i]	<- pi_prov[nonzind,i] }
b 		<- b_prov[nonzind]
return(list(beta1=beta1,beta2=beta2,U=U,m=m,mu=mu,pi=pi,b=b))
}
###############################################################
###############################################################
grad2D<-function(f,T,U,step){
EPS  <- 0.0001
fact  <- 10/step
l	<- length(T)
m	<- dim(U)[1]
D1	<- matrix(0,m,1)
D2	<- matrix(0,m,1)
for (i1 in 2:l){
u1	<- T[i1]
for (i2 in 2:l) {
u2		<- T[i2]
j		<- which((fact*U[,1] + U[,2])==(fact*u1+u2))
jprecx	<- which(abs((fact*U[,1] + U[,2])-(fact*(u1-step)+u2))<EPS)
jprecy	<- which(abs((fact*U[,1] + U[,2])-(fact*u1+(u2-step)))<EPS)
if ((length(jprecx)!=1)|(length(jprecy)!=1)) {stop("Problem in grad2D")}
D1[j]		<- (f[j]-f[jprecx])/step
D2[j]		<- (f[j]-f[jprecy])/step
}
}
return(list(D1bk=D1,D2bk=D2))
}
###############################################################
###############################################################
PlotFixedx2D<-function(xeval,beta1,beta2,lT){
yeval=yhat2D(xeval,beta1,beta2)
persp(z=matrix(yeval$y1s,nrow=(lT-1)),theta=30, phi=30, expand=0.6,col='lightblue', shade=0.75, ltheta=120,ticktype='detailed')
dev.new()
persp(z=matrix(yeval$y2s,nrow=(lT-1)),theta=30, phi=30, expand=0.6,col='lightblue', shade=0.75, ltheta=120,ticktype='detailed')
}
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
X<-inputs$X;Y<-inputs$Y;n<-inputs$n;d<-inputs$d;r<-inputs$r
Xstep<- 0.1
nu<-matrix(1/n,n,1)
T	<- seq(0,1,by=step)
lT	<- length(T)
if (d!=2){stop("Dimension d not supported")}
UEtAlprov		<- prepareU2D(T)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
xeval			<- matrix(c(1,2.33),1,2)
PlotFixedx2D(xeval,betaEtAl$beta1,betaEtAl$beta2,lT)
source(paste0(getwd(),"/VQR.R"))
inputs<- load_VQRData("GDPDebtDeficit")
X<-inputs$X;Y<-inputs$Y;n<-inputs$n;d<-inputs$d;r<-inputs$r
Xstep<- 0.1
nu<-matrix(1/n,n,1)
T	<- seq(0,1,by=step)
lT	<- length(T)
if (d!=2){stop("Dimension d not supported")}
UEtAlprov		<- prepareU2D(T)
VQRprov		<- VQRTp(X,Y,UEtAlprov$U,UEtAlprov$mu,nu)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
xeval			<- matrix(c(1,2.33),1,2)
PlotFixedx2D(xeval,betaEtAl$beta1,betaEtAl$beta2,lT)
#print(MKQRprov$b)
betaEtAl		<- ComputeBetaEtAl2D(VQRprov$b,T,UEtAlprov$U,VQRprov$pi,step)
theGrad <- grad2D(b_prov[,k],T,U_prov,step);
b_prov
b_prov
